# This file was generated based on ".graphqlconfig". Do not edit manually.

schema {
    query: Query
}

"Node Interface"
interface Node {
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

"A Sanity document"
interface SanityDocument {
    _createdAt: Date
    _id: String
    _rev: String
    _type: String
    _updatedAt: Date
}

type Directory implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    children: [Node!]!
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type DirectoryConnection {
    distinct(field: DirectoryFieldsEnum!): [String!]!
    edges: [DirectoryEdge!]!
    group(field: DirectoryFieldsEnum!, limit: Int, skip: Int): [DirectoryGroupConnection!]!
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type DirectoryEdge {
    next: Directory
    node: Directory!
    previous: Directory
}

type DirectoryGroupConnection {
    edges: [DirectoryEdge!]!
    field: String!
    fieldValue: String
    nodes: [Directory!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type File implements Node {
    absolutePath: String!
    accessTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    atimeMs: Float!
    base: String!
    birthTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    birthtime: Date @deprecated(reason : "Use `birthTime` instead")
    birthtimeMs: Float @deprecated(reason : "Use `birthTime` instead")
    blksize: Int
    blocks: Int
    changeTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    "Returns the first child node of type ImageSharp or null if there are no children of given type on this node"
    childImageSharp: ImageSharp
    children: [Node!]!
    "Returns all children nodes filtered by type ImageSharp"
    childrenImageSharp: [ImageSharp]
    ctime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    ctimeMs: Float!
    dev: Int!
    dir: String!
    ext: String!
    extension: String!
    gid: Int!
    id: ID!
    ino: Float!
    internal: Internal!
    mode: Int!
    modifiedTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date!
    mtimeMs: Float!
    name: String!
    nlink: Int!
    parent: Node
    prettySize: String!
    "Copy file to static directory and return public url to it"
    publicURL: String
    rdev: Int!
    relativeDirectory: String!
    relativePath: String!
    root: String!
    size: Int!
    sourceInstanceName: String!
    uid: Int!
}

type FileConnection {
    distinct(field: FileFieldsEnum!): [String!]!
    edges: [FileEdge!]!
    group(field: FileFieldsEnum!, limit: Int, skip: Int): [FileGroupConnection!]!
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type FileEdge {
    next: File
    node: File!
    previous: File
}

type FileGroupConnection {
    edges: [FileEdge!]!
    field: String!
    fieldValue: String
    nodes: [File!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharp implements Node {
    children: [Node!]!
    fixed(background: String = "rgba(0,0,0,1)", base64Width: Int, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, toFormatBase64: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpFixed
    fluid(
        background: String = "rgba(0,0,0,1)",
        base64Width: Int,
        cropFocus: ImageCropFocus = ATTENTION,
        duotone: DuotoneGradient,
        fit: ImageFit = COVER,
        grayscale: Boolean = false,
        jpegProgressive: Boolean = true,
        jpegQuality: Int,
        maxHeight: Int,
        maxWidth: Int,
        pngCompressionSpeed: Int = 4,
        pngQuality: Int,
        quality: Int,
        rotate: Int = 0,
        sizes: String = "",
        "A list of image widths to be generated. Example: [ 200, 340, 520, 890 ]"
        srcSetBreakpoints: [Int] = [],
        toFormat: ImageFormat = AUTO,
        toFormatBase64: ImageFormat = AUTO,
        traceSVG: Potrace,
        trim: Float = 0.0,
        webpQuality: Int
    ): ImageSharpFluid
    gatsbyImageData(
        """

        If set along with width or height, this will set the value of the other dimension to match the provided aspect ratio, cropping the image if needed.
        If neither width or height is provided, height will be set based on the intrinsic width of the source image.
        """
        aspectRatio: Float,
        "Options to pass to sharp when generating AVIF images."
        avifOptions: AVIFOptions,
        "Background color applied to the wrapper. Also passed to sharp to use as a background when \"letterboxing\" an image to another aspect ratio."
        backgroundColor: String,
        "Options for the low-resolution placeholder image. Set placeholder to \"BLURRED\" to use this"
        blurredOptions: BlurredOptions,
        """

        Specifies the image widths to generate. For FIXED and CONSTRAINED images it is better to allow these to be determined automatically,
        based on the image size. For FULL_WIDTH images this can be used to override the default, which is [750, 1080, 1366, 1920].
        It will never generate any images larger than the source.
        """
        breakpoints: [Int],
        """

        The image formats to generate. Valid values are "AUTO" (meaning the same format as the source image), "JPG", "PNG", "WEBP" and "AVIF".
        The default value is [AUTO, WEBP], and you should rarely need to change this. Take care if you specify JPG or PNG when you do
        not know the formats of the source images, as this could lead to unwanted results such as converting JPEGs to PNGs. Specifying
        both PNG and JPG is not supported and will be ignored.
        """
        formats: [ImageFormat],
        """

        The display height of the generated image for layout = FIXED, and the maximum display height of the largest image for layout = CONSTRAINED.
        The image will be cropped if the aspect ratio does not match the source image. If omitted, it is calculated from the supplied width,
        matching the aspect ratio of the source image.
        """
        height: Int,
        "Options to pass to sharp when generating JPG images."
        jpgOptions: JPGOptions,
        """

        The layout for the image.
        FIXED: A static image sized, that does not resize according to the screen width
        FULL_WIDTH: The image resizes to fit its container. Pass a "sizes" option if it isn't going to be the full width of the screen.
        CONSTRAINED: Resizes to fit its container, up to a maximum width, at which point it will remain fixed in size.
        """
        layout: ImageLayout = CONSTRAINED,
        """

        A list of image pixel densities to generate. It will never generate images larger than the source, and will always include a 1x image.
        Default is [ 1, 2 ] for FIXED images, meaning 1x and 2x and [0.25, 0.5, 1, 2] for CONSTRAINED. In this case, an image with a constrained layout
        and width = 400 would generate images at 100, 200, 400 and 800px wide. Ignored for FULL_WIDTH images, which use breakpoints instead
        """
        outputPixelDensities: [Float],
        """

        Format of generated placeholder image, displayed while the main image loads.
        BLURRED: a blurred, low resolution image, encoded as a base64 data URI (default)
        DOMINANT_COLOR: a solid color, calculated from the dominant color of the image.
        TRACED_SVG: a low-resolution traced SVG of the image.
        NONE: no placeholder. Set "background" to use a fixed background color.
        """
        placeholder: ImagePlaceholder,
        "Options to pass to sharp when generating PNG images."
        pngOptions: PNGOptions,
        "The default quality. This is overridden by any format-specific options"
        quality: Int,
        """

        The "sizes" property, passed to the img tag. This describes the display size of the image.
        This does not affect the generated images, but is used by the browser to decide which images to download.
        You should usually leave this blank, and a suitable value will be calculated. The exception is if a FULL_WIDTH image
        does not actually span the full width of the screen, in which case you should pass the correct size here.
        """
        sizes: String,
        "Options for traced placeholder SVGs. You also should set placeholder to \"TRACED_SVG\"."
        tracedSVGOptions: Potrace,
        "Options to pass to sharp to control cropping and other image manipulations."
        transformOptions: TransformOptions,
        "Options to pass to sharp when generating WebP images."
        webpOptions: WebPOptions,
        """

        The display width of the generated image for layout = FIXED, and the maximum display width of the largest image for layout = CONSTRAINED.
        Ignored if layout = FLUID.
        """
        width: Int
    ): JSON!
    id: ID!
    internal: Internal!
    original: ImageSharpOriginal
    parent: Node
    resize(background: String = "rgba(0,0,0,1)", base64: Boolean = false, cropFocus: ImageCropFocus = ATTENTION, duotone: DuotoneGradient, fit: ImageFit = COVER, grayscale: Boolean = false, height: Int, jpegProgressive: Boolean = true, jpegQuality: Int, pngCompressionLevel: Int = 9, pngCompressionSpeed: Int = 4, pngQuality: Int, quality: Int, rotate: Int = 0, toFormat: ImageFormat = AUTO, traceSVG: Potrace, trim: Float = 0.0, webpQuality: Int, width: Int): ImageSharpResize
}

type ImageSharpConnection {
    distinct(field: ImageSharpFieldsEnum!): [String!]!
    edges: [ImageSharpEdge!]!
    group(field: ImageSharpFieldsEnum!, limit: Int, skip: Int): [ImageSharpGroupConnection!]!
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpEdge {
    next: ImageSharp
    node: ImageSharp!
    previous: ImageSharp
}

type ImageSharpFixed {
    aspectRatio: Float
    base64: String
    height: Float!
    originalName: String
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
    width: Float!
}

type ImageSharpFluid {
    aspectRatio: Float!
    base64: String
    originalImg: String
    originalName: String
    presentationHeight: Int!
    presentationWidth: Int!
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    tracedSVG: String
}

type ImageSharpGroupConnection {
    edges: [ImageSharpEdge!]!
    field: String!
    fieldValue: String
    nodes: [ImageSharp!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type ImageSharpOriginal {
    height: Float
    src: String
    width: Float
}

type ImageSharpResize {
    aspectRatio: Float
    height: Int
    originalName: String
    src: String
    tracedSVG: String
    width: Int
}

type Internal {
    content: String
    contentDigest: String!
    description: String
    fieldOwners: [String]
    ignoreType: Boolean
    mediaType: String
    owner: String!
    type: String!
}

type PageInfo {
    currentPage: Int!
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    itemCount: Int!
    pageCount: Int!
    perPage: Int
    totalCount: Int!
}

type Query {
    allDirectory(filter: DirectoryFilterInput, limit: Int, skip: Int, sort: DirectorySortInput): DirectoryConnection!
    allFile(filter: FileFilterInput, limit: Int, skip: Int, sort: FileSortInput): FileConnection!
    allImageSharp(filter: ImageSharpFilterInput, limit: Int, skip: Int, sort: ImageSharpSortInput): ImageSharpConnection!
    allSanityDatabase(filter: SanityDatabaseFilterInput, limit: Int, skip: Int, sort: SanityDatabaseSortInput): SanityDatabaseConnection!
    allSanityDevelopment(filter: SanityDevelopmentFilterInput, limit: Int, skip: Int, sort: SanityDevelopmentSortInput): SanityDevelopmentConnection!
    allSanityFileAsset(filter: SanityFileAssetFilterInput, limit: Int, skip: Int, sort: SanityFileAssetSortInput): SanityFileAssetConnection!
    allSanityImageAsset(filter: SanityImageAssetFilterInput, limit: Int, skip: Int, sort: SanityImageAssetSortInput): SanityImageAssetConnection!
    allSanityProject(filter: SanityProjectFilterInput, limit: Int, skip: Int, sort: SanityProjectSortInput): SanityProjectConnection!
    allSanityTools(filter: SanityToolsFilterInput, limit: Int, skip: Int, sort: SanityToolsSortInput): SanityToolsConnection!
    allSite(filter: SiteFilterInput, limit: Int, skip: Int, sort: SiteSortInput): SiteConnection!
    allSiteBuildMetadata(filter: SiteBuildMetadataFilterInput, limit: Int, skip: Int, sort: SiteBuildMetadataSortInput): SiteBuildMetadataConnection!
    allSitePage(filter: SitePageFilterInput, limit: Int, skip: Int, sort: SitePageSortInput): SitePageConnection!
    allSitePlugin(filter: SitePluginFilterInput, limit: Int, skip: Int, sort: SitePluginSortInput): SitePluginConnection!
    directory(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, children: NodeFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): Directory
    file(absolutePath: StringQueryOperatorInput, accessTime: DateQueryOperatorInput, atime: DateQueryOperatorInput, atimeMs: FloatQueryOperatorInput, base: StringQueryOperatorInput, birthTime: DateQueryOperatorInput, birthtime: DateQueryOperatorInput, birthtimeMs: FloatQueryOperatorInput, blksize: IntQueryOperatorInput, blocks: IntQueryOperatorInput, changeTime: DateQueryOperatorInput, childImageSharp: ImageSharpFilterInput, children: NodeFilterListInput, childrenImageSharp: ImageSharpFilterListInput, ctime: DateQueryOperatorInput, ctimeMs: FloatQueryOperatorInput, dev: IntQueryOperatorInput, dir: StringQueryOperatorInput, ext: StringQueryOperatorInput, extension: StringQueryOperatorInput, gid: IntQueryOperatorInput, id: StringQueryOperatorInput, ino: FloatQueryOperatorInput, internal: InternalFilterInput, mode: IntQueryOperatorInput, modifiedTime: DateQueryOperatorInput, mtime: DateQueryOperatorInput, mtimeMs: FloatQueryOperatorInput, name: StringQueryOperatorInput, nlink: IntQueryOperatorInput, parent: NodeFilterInput, prettySize: StringQueryOperatorInput, publicURL: StringQueryOperatorInput, rdev: IntQueryOperatorInput, relativeDirectory: StringQueryOperatorInput, relativePath: StringQueryOperatorInput, root: StringQueryOperatorInput, size: IntQueryOperatorInput, sourceInstanceName: StringQueryOperatorInput, uid: IntQueryOperatorInput): File
    imageSharp(children: NodeFilterListInput, fixed: ImageSharpFixedFilterInput, fluid: ImageSharpFluidFilterInput, gatsbyImageData: JSONQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, original: ImageSharpOriginalFilterInput, parent: NodeFilterInput, resize: ImageSharpResizeFilterInput): ImageSharp
    sanityDatabase(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawImage: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, color: StringQueryOperatorInput, description: StringQueryOperatorInput, descriptionpl: StringQueryOperatorInput, id: StringQueryOperatorInput, image: SanityImageFilterInput, internal: InternalFilterInput, name: StringQueryOperatorInput, order: FloatQueryOperatorInput, parent: NodeFilterInput): SanityDatabase
    sanityDevelopment(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawImage: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, color: StringQueryOperatorInput, description: StringQueryOperatorInput, descriptionpl: StringQueryOperatorInput, id: StringQueryOperatorInput, image: SanityImageFilterInput, internal: InternalFilterInput, name: StringQueryOperatorInput, order: FloatQueryOperatorInput, parent: NodeFilterInput): SanityDevelopment
    sanityFileAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, assetId: StringQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): SanityFileAsset
    sanityImageAsset(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawMetadata: JSONQueryOperatorInput, _rawSource: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, assetId: StringQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, extension: StringQueryOperatorInput, fixed: SanityImageFixedFilterInput, fluid: SanityImageFluidFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, label: StringQueryOperatorInput, metadata: SanityImageMetadataFilterInput, mimeType: StringQueryOperatorInput, originalFilename: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, sha1hash: StringQueryOperatorInput, size: FloatQueryOperatorInput, source: SanityAssetSourceDataFilterInput, title: StringQueryOperatorInput, url: StringQueryOperatorInput): SanityImageAsset
    sanityProject(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawFrontImage: JSONQueryOperatorInput, _rawImage: JSONQueryOperatorInput, _rawSkillsDb: JSONQueryOperatorInput, _rawSkillsDev: JSONQueryOperatorInput, _rawSkillsTools: JSONQueryOperatorInput, _rawSlug: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, description: StringQueryOperatorInput, descriptionpl: StringQueryOperatorInput, frontImage: SanityImageFilterInput, github: StringQueryOperatorInput, id: StringQueryOperatorInput, image: SanityImageFilterListInput, internal: InternalFilterInput, isGroup: BooleanQueryOperatorInput, live: StringQueryOperatorInput, name: StringQueryOperatorInput, namepl: StringQueryOperatorInput, order: FloatQueryOperatorInput, parent: NodeFilterInput, skillsDb: SanityDbDescriptionFilterListInput, skillsDev: SanityDevDescriptionFilterListInput, skillsTools: SanityToolsDescriptionFilterListInput, slug: SanitySlugFilterInput, userData: StringQueryOperatorInput, yt: StringQueryOperatorInput): SanityProject
    sanityTools(_createdAt: DateQueryOperatorInput, _id: StringQueryOperatorInput, _key: StringQueryOperatorInput, _rawImage: JSONQueryOperatorInput, _rev: StringQueryOperatorInput, _type: StringQueryOperatorInput, _updatedAt: DateQueryOperatorInput, children: NodeFilterListInput, color: StringQueryOperatorInput, description: StringQueryOperatorInput, descriptionpl: StringQueryOperatorInput, id: StringQueryOperatorInput, image: SanityImageFilterInput, internal: InternalFilterInput, name: StringQueryOperatorInput, order: FloatQueryOperatorInput, parent: NodeFilterInput): SanityTools
    site(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, host: StringQueryOperatorInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput, pathPrefix: StringQueryOperatorInput, polyfill: BooleanQueryOperatorInput, port: IntQueryOperatorInput, siteMetadata: SiteSiteMetadataFilterInput): Site
    siteBuildMetadata(buildTime: DateQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, parent: NodeFilterInput): SiteBuildMetadata
    sitePage(children: NodeFilterListInput, component: StringQueryOperatorInput, componentChunkName: StringQueryOperatorInput, componentPath: StringQueryOperatorInput, context: SitePageContextFilterInput, id: StringQueryOperatorInput, internal: InternalFilterInput, internalComponentName: StringQueryOperatorInput, isCreatedByStatefulCreatePages: BooleanQueryOperatorInput, matchPath: StringQueryOperatorInput, parent: NodeFilterInput, path: StringQueryOperatorInput, pluginCreator: SitePluginFilterInput, pluginCreatorId: StringQueryOperatorInput): SitePage
    sitePlugin(browserAPIs: StringQueryOperatorInput, children: NodeFilterListInput, id: StringQueryOperatorInput, internal: InternalFilterInput, name: StringQueryOperatorInput, nodeAPIs: StringQueryOperatorInput, packageJson: SitePluginPackageJsonFilterInput, parent: NodeFilterInput, pluginFilepath: StringQueryOperatorInput, pluginOptions: SitePluginPluginOptionsFilterInput, resolve: StringQueryOperatorInput, ssrAPIs: StringQueryOperatorInput, version: StringQueryOperatorInput): SitePlugin
}

type SanityAssetSourceData {
    _key: String
    _type: String
    id: String
    name: String
    url: String
}

type SanityBlock {
    _key: String
    _rawChildren(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    children: [SanitySpan]
    list: String
    style: String
}

type SanityDatabase implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    color: String
    description: String
    descriptionpl: String
    id: ID!
    image: SanityImage
    internal: Internal!
    name: String
    order: Float
    parent: Node
}

type SanityDatabaseConnection {
    distinct(field: SanityDatabaseFieldsEnum!): [String!]!
    edges: [SanityDatabaseEdge!]!
    group(field: SanityDatabaseFieldsEnum!, limit: Int, skip: Int): [SanityDatabaseGroupConnection!]!
    nodes: [SanityDatabase!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityDatabaseEdge {
    next: SanityDatabase
    node: SanityDatabase!
    previous: SanityDatabase
}

type SanityDatabaseGroupConnection {
    edges: [SanityDatabaseEdge!]!
    field: String!
    fieldValue: String
    nodes: [SanityDatabase!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityDbDescription {
    _key: String
    _rawSkills(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    description: String
    descriptionpl: String
    skills: SanityDatabase
}

type SanityDevDescription {
    _key: String
    _rawSkills(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    description: String
    descriptionpl: String
    skills: SanityDevelopment
}

type SanityDevelopment implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    color: String
    description: String
    descriptionpl: String
    id: ID!
    image: SanityImage
    internal: Internal!
    name: String
    order: Float
    parent: Node
}

type SanityDevelopmentConnection {
    distinct(field: SanityDevelopmentFieldsEnum!): [String!]!
    edges: [SanityDevelopmentEdge!]!
    group(field: SanityDevelopmentFieldsEnum!, limit: Int, skip: Int): [SanityDevelopmentGroupConnection!]!
    nodes: [SanityDevelopment!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityDevelopmentEdge {
    next: SanityDevelopment
    node: SanityDevelopment!
    previous: SanityDevelopment
}

type SanityDevelopmentGroupConnection {
    edges: [SanityDevelopmentEdge!]!
    field: String!
    fieldValue: String
    nodes: [SanityDevelopment!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityFile {
    _key: String
    _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    asset: SanityFileAsset
}

type SanityFileAsset implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    assetId: String
    children: [Node!]!
    description: String
    extension: String
    id: ID!
    internal: Internal!
    label: String
    mimeType: String
    originalFilename: String
    parent: Node
    path: String
    sha1hash: String
    size: Float
    source: SanityAssetSourceData
    title: String
    url: String
}

type SanityFileAssetConnection {
    distinct(field: SanityFileAssetFieldsEnum!): [String!]!
    edges: [SanityFileAssetEdge!]!
    group(field: SanityFileAssetFieldsEnum!, limit: Int, skip: Int): [SanityFileAssetGroupConnection!]!
    nodes: [SanityFileAsset!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityFileAssetEdge {
    next: SanityFileAsset
    node: SanityFileAsset!
    previous: SanityFileAsset
}

type SanityFileAssetGroupConnection {
    edges: [SanityFileAssetEdge!]!
    field: String!
    fieldValue: String
    nodes: [SanityFileAsset!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityGeopoint {
    _key: String
    _type: String
    alt: Float
    lat: Float
    lng: Float
}

type SanityImage {
    _key: String
    _rawAsset(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawCrop(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawHotspot(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    asset: SanityImageAsset
    crop: SanityImageCrop
    hotspot: SanityImageHotspot
}

type SanityImageAsset implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawMetadata(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawSource(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    assetId: String
    children: [Node!]!
    description: String
    extension: String
    fixed(height: Int, toFormat: SanityImageFormat = NO_CHANGE, width: Int = 400): SanityImageFixed
    fluid(maxHeight: Int, maxWidth: Int = 800, sizes: String, toFormat: SanityImageFormat = NO_CHANGE): SanityImageFluid
    id: ID!
    internal: Internal!
    label: String
    metadata: SanityImageMetadata
    mimeType: String
    originalFilename: String
    parent: Node
    path: String
    sha1hash: String
    size: Float
    source: SanityAssetSourceData
    title: String
    url: String
}

type SanityImageAssetConnection {
    distinct(field: SanityImageAssetFieldsEnum!): [String!]!
    edges: [SanityImageAssetEdge!]!
    group(field: SanityImageAssetFieldsEnum!, limit: Int, skip: Int): [SanityImageAssetGroupConnection!]!
    nodes: [SanityImageAsset!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityImageAssetEdge {
    next: SanityImageAsset
    node: SanityImageAsset!
    previous: SanityImageAsset
}

type SanityImageAssetGroupConnection {
    edges: [SanityImageAssetEdge!]!
    field: String!
    fieldValue: String
    nodes: [SanityImageAsset!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityImageCrop {
    _key: String
    _type: String
    bottom: Float
    left: Float
    right: Float
    top: Float
}

type SanityImageDimensions {
    _key: String
    _type: String
    aspectRatio: Float
    height: Float
    width: Float
}

type SanityImageFixed {
    base64: String
    height: Float!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
    width: Float!
}

type SanityImageFluid {
    aspectRatio: Float!
    base64: String
    sizes: String!
    src: String!
    srcSet: String!
    srcSetWebp: String
    srcWebp: String
}

type SanityImageHotspot {
    _key: String
    _type: String
    height: Float
    width: Float
    x: Float
    y: Float
}

type SanityImageMetadata {
    _key: String
    _rawDimensions(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawLocation(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawPalette(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    dimensions: SanityImageDimensions
    hasAlpha: Boolean
    isOpaque: Boolean
    location: SanityGeopoint
    lqip: String
    palette: SanityImagePalette
}

type SanityImagePalette {
    _key: String
    _rawDarkMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawDarkVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawDominant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawLightMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawLightVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawMuted(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawVibrant(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    darkMuted: SanityImagePaletteSwatch
    darkVibrant: SanityImagePaletteSwatch
    dominant: SanityImagePaletteSwatch
    lightMuted: SanityImagePaletteSwatch
    lightVibrant: SanityImagePaletteSwatch
    muted: SanityImagePaletteSwatch
    vibrant: SanityImagePaletteSwatch
}

type SanityImagePaletteSwatch {
    _key: String
    _type: String
    background: String
    foreground: String
    population: Float
    title: String
}

type SanityProject implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawFrontImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawSkillsDb(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawSkillsDev(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawSkillsTools(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rawSlug(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    description: String
    descriptionpl: String
    frontImage: SanityImage
    github: String
    id: ID!
    image: [SanityImage]
    internal: Internal!
    isGroup: Boolean
    live: String
    name: String
    namepl: String
    order: Float
    parent: Node
    skillsDb: [SanityDbDescription]
    skillsDev: [SanityDevDescription]
    skillsTools: [SanityToolsDescription]
    slug: SanitySlug
    userData: String
    yt: String
}

type SanityProjectConnection {
    distinct(field: SanityProjectFieldsEnum!): [String!]!
    edges: [SanityProjectEdge!]!
    group(field: SanityProjectFieldsEnum!, limit: Int, skip: Int): [SanityProjectGroupConnection!]!
    nodes: [SanityProject!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityProjectEdge {
    next: SanityProject
    node: SanityProject!
    previous: SanityProject
}

type SanityProjectGroupConnection {
    edges: [SanityProjectEdge!]!
    field: String!
    fieldValue: String
    nodes: [SanityProject!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanitySlug {
    _key: String
    _type: String
    current: String
}

type SanitySpan {
    _key: String
    _type: String
    marks: [String]
    text: String
}

type SanityTools implements Node & SanityDocument {
    _createdAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    _id: String
    _key: String
    _rawImage(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _rev: String
    _type: String
    _updatedAt(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    color: String
    description: String
    descriptionpl: String
    id: ID!
    image: SanityImage
    internal: Internal!
    name: String
    order: Float
    parent: Node
}

type SanityToolsConnection {
    distinct(field: SanityToolsFieldsEnum!): [String!]!
    edges: [SanityToolsEdge!]!
    group(field: SanityToolsFieldsEnum!, limit: Int, skip: Int): [SanityToolsGroupConnection!]!
    nodes: [SanityTools!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SanityToolsDescription {
    _key: String
    _rawSkills(resolveReferences: SanityResolveReferencesConfiguration): JSON
    _type: String
    description: String
    descriptionpl: String
    skills: SanityTools
}

type SanityToolsEdge {
    next: SanityTools
    node: SanityTools!
    previous: SanityTools
}

type SanityToolsGroupConnection {
    edges: [SanityToolsEdge!]!
    field: String!
    fieldValue: String
    nodes: [SanityTools!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type Site implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    host: String
    id: ID!
    internal: Internal!
    parent: Node
    pathPrefix: String
    polyfill: Boolean
    port: Int
    siteMetadata: SiteSiteMetadata
}

type SiteBuildMetadata implements Node {
    buildTime(
        "Returns the difference between this date and the current time. Defaults to \"milliseconds\" but you can also pass in as the measurement \"years\", \"months\", \"weeks\", \"days\", \"hours\", \"minutes\", and \"seconds\"."
        difference: String,
        "Format the date using Moment.js' date tokens, e.g. `date(formatString: \"YYYY MMMM DD\")`. See https://momentjs.com/docs/#/displaying/format/ for documentation for different tokens."
        formatString: String,
        "Returns a string generated with Moment.js' `fromNow` function"
        fromNow: Boolean,
        "Configures the locale Moment.js will use to format the date."
        locale: String
    ): Date
    children: [Node!]!
    id: ID!
    internal: Internal!
    parent: Node
}

type SiteBuildMetadataConnection {
    distinct(field: SiteBuildMetadataFieldsEnum!): [String!]!
    edges: [SiteBuildMetadataEdge!]!
    group(field: SiteBuildMetadataFieldsEnum!, limit: Int, skip: Int): [SiteBuildMetadataGroupConnection!]!
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteBuildMetadataEdge {
    next: SiteBuildMetadata
    node: SiteBuildMetadata!
    previous: SiteBuildMetadata
}

type SiteBuildMetadataGroupConnection {
    edges: [SiteBuildMetadataEdge!]!
    field: String!
    fieldValue: String
    nodes: [SiteBuildMetadata!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteConnection {
    distinct(field: SiteFieldsEnum!): [String!]!
    edges: [SiteEdge!]!
    group(field: SiteFieldsEnum!, limit: Int, skip: Int): [SiteGroupConnection!]!
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SiteEdge {
    next: Site
    node: Site!
    previous: Site
}

type SiteGroupConnection {
    edges: [SiteEdge!]!
    field: String!
    fieldValue: String
    nodes: [Site!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePage implements Node {
    children: [Node!]!
    component: String!
    componentChunkName: String!
    componentPath: String
    context: SitePageContext
    id: ID!
    internal: Internal!
    internalComponentName: String!
    isCreatedByStatefulCreatePages: Boolean
    matchPath: String
    parent: Node
    path: String!
    pluginCreator: SitePlugin
    pluginCreatorId: String
}

type SitePageConnection {
    distinct(field: SitePageFieldsEnum!): [String!]!
    edges: [SitePageEdge!]!
    group(field: SitePageFieldsEnum!, limit: Int, skip: Int): [SitePageGroupConnection!]!
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePageContext {
    slug: String
}

type SitePageEdge {
    next: SitePage
    node: SitePage!
    previous: SitePage
}

type SitePageGroupConnection {
    edges: [SitePageEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePage!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePlugin implements Node {
    browserAPIs: [String]
    children: [Node!]!
    id: ID!
    internal: Internal!
    name: String
    nodeAPIs: [String]
    packageJson: SitePluginPackageJson
    parent: Node
    pluginFilepath: String
    pluginOptions: SitePluginPluginOptions
    resolve: String
    ssrAPIs: [String]
    version: String
}

type SitePluginConnection {
    distinct(field: SitePluginFieldsEnum!): [String!]!
    edges: [SitePluginEdge!]!
    group(field: SitePluginFieldsEnum!, limit: Int, skip: Int): [SitePluginGroupConnection!]!
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginEdge {
    next: SitePlugin
    node: SitePlugin!
    previous: SitePlugin
}

type SitePluginGroupConnection {
    edges: [SitePluginEdge!]!
    field: String!
    fieldValue: String
    nodes: [SitePlugin!]!
    pageInfo: PageInfo!
    totalCount: Int!
}

type SitePluginPackageJson {
    dependencies: [SitePluginPackageJsonDependencies]
    description: String
    devDependencies: [SitePluginPackageJsonDevDependencies]
    keywords: [String]
    license: String
    main: String
    name: String
    peerDependencies: [SitePluginPackageJsonPeerDependencies]
    version: String
}

type SitePluginPackageJsonDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonDevDependencies {
    name: String
    version: String
}

type SitePluginPackageJsonPeerDependencies {
    name: String
    version: String
}

type SitePluginPluginOptions {
    allExtensions: Boolean
    base64Width: Int
    dataset: String
    defaultQuality: Int
    displayName: Boolean
    failOnError: Boolean
    fileName: Boolean
    isTSX: Boolean
    jsxPragma: String
    minify: Boolean
    name: String
    namespace: String
    path: String
    pathCheck: Boolean
    projectId: String
    pure: Boolean
    stripMetadata: Boolean
    token: String
    transpileTemplateLiterals: Boolean
    watchMode: Boolean
}

type SiteSiteMetadata {
    description: String
    siteUrl: String
    title: String
    twitter: String
}

enum DirectoryFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum FileFieldsEnum {
    absolutePath
    accessTime
    atime
    atimeMs
    base
    birthTime
    birthtime
    birthtimeMs
    blksize
    blocks
    changeTime
    childImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children
    childrenImageSharp
    childrenImageSharp___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    childrenImageSharp___resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    ctime
    ctimeMs
    dev
    dir
    ext
    extension
    gid
    id
    ino
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    mode
    modifiedTime
    mtime
    mtimeMs
    name
    nlink
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    prettySize
    publicURL
    rdev
    relativeDirectory
    relativePath
    root
    size
    sourceInstanceName
    uid
}

enum ImageCropFocus {
    ATTENTION
    CENTER
    EAST
    ENTROPY
    NORTH
    NORTHEAST
    NORTHWEST
    SOUTH
    SOUTHEAST
    SOUTHWEST
    WEST
}

enum ImageFit {
    CONTAIN
    COVER
    FILL
    INSIDE
    OUTSIDE
}

enum ImageFormat {
    AUTO
    AVIF
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum ImageLayout {
    CONSTRAINED
    FIXED
    FULL_WIDTH
}

enum ImagePlaceholder {
    BLURRED
    DOMINANT_COLOR
    NONE
    TRACED_SVG
}

enum ImageSharpFieldsEnum {
    children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalImg @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationHeight @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___presentationWidth @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    gatsbyImageData @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    original___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___originalName @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___tracedSVG @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    resize___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
}

enum PotraceTurnPolicy {
    TURNPOLICY_BLACK
    TURNPOLICY_LEFT
    TURNPOLICY_MAJORITY
    TURNPOLICY_MINORITY
    TURNPOLICY_RIGHT
    TURNPOLICY_WHITE
}

enum SanityDatabaseFieldsEnum {
    _createdAt
    _id
    _key
    _rawImage
    _rev
    _type
    _updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    color
    description
    descriptionpl
    id
    image____key
    image____rawAsset
    image____rawCrop
    image____rawHotspot
    image____type
    image___asset____createdAt
    image___asset____id
    image___asset____key
    image___asset____rawMetadata
    image___asset____rawSource
    image___asset____rev
    image___asset____type
    image___asset____updatedAt
    image___asset___assetId
    image___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___description
    image___asset___extension
    image___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___label
    image___asset___metadata____key
    image___asset___metadata____rawDimensions
    image___asset___metadata____rawLocation
    image___asset___metadata____rawPalette
    image___asset___metadata____type
    image___asset___metadata___hasAlpha
    image___asset___metadata___isOpaque
    image___asset___metadata___lqip
    image___asset___mimeType
    image___asset___originalFilename
    image___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___path
    image___asset___sha1hash
    image___asset___size
    image___asset___source____key
    image___asset___source____type
    image___asset___source___id
    image___asset___source___name
    image___asset___source___url
    image___asset___title
    image___asset___url
    image___crop____key
    image___crop____type
    image___crop___bottom
    image___crop___left
    image___crop___right
    image___crop___top
    image___hotspot____key
    image___hotspot____type
    image___hotspot___height
    image___hotspot___width
    image___hotspot___x
    image___hotspot___y
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SanityDevelopmentFieldsEnum {
    _createdAt
    _id
    _key
    _rawImage
    _rev
    _type
    _updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    color
    description
    descriptionpl
    id
    image____key
    image____rawAsset
    image____rawCrop
    image____rawHotspot
    image____type
    image___asset____createdAt
    image___asset____id
    image___asset____key
    image___asset____rawMetadata
    image___asset____rawSource
    image___asset____rev
    image___asset____type
    image___asset____updatedAt
    image___asset___assetId
    image___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___description
    image___asset___extension
    image___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___label
    image___asset___metadata____key
    image___asset___metadata____rawDimensions
    image___asset___metadata____rawLocation
    image___asset___metadata____rawPalette
    image___asset___metadata____type
    image___asset___metadata___hasAlpha
    image___asset___metadata___isOpaque
    image___asset___metadata___lqip
    image___asset___mimeType
    image___asset___originalFilename
    image___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___path
    image___asset___sha1hash
    image___asset___size
    image___asset___source____key
    image___asset___source____type
    image___asset___source___id
    image___asset___source___name
    image___asset___source___url
    image___asset___title
    image___asset___url
    image___crop____key
    image___crop____type
    image___crop___bottom
    image___crop___left
    image___crop___right
    image___crop___top
    image___hotspot____key
    image___hotspot____type
    image___hotspot___height
    image___hotspot___width
    image___hotspot___x
    image___hotspot___y
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SanityFileAssetFieldsEnum {
    _createdAt
    _id
    _key
    _rawSource
    _rev
    _type
    _updatedAt
    assetId
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    extension
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    label
    mimeType
    originalFilename
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    sha1hash
    size
    source____key
    source____type
    source___id
    source___name
    source___url
    title
    url
}

enum SanityImageAssetFieldsEnum {
    _createdAt
    _id
    _key
    _rawMetadata
    _rawSource
    _rev
    _type
    _updatedAt
    assetId
    children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    children___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    description
    extension
    fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    label
    metadata____key
    metadata____rawDimensions
    metadata____rawLocation
    metadata____rawPalette
    metadata____type
    metadata___dimensions____key
    metadata___dimensions____type
    metadata___dimensions___aspectRatio
    metadata___dimensions___height
    metadata___dimensions___width
    metadata___hasAlpha
    metadata___isOpaque
    metadata___location____key
    metadata___location____type
    metadata___location___alt
    metadata___location___lat
    metadata___location___lng
    metadata___lqip
    metadata___palette____key
    metadata___palette____rawDarkMuted
    metadata___palette____rawDarkVibrant
    metadata___palette____rawDominant
    metadata___palette____rawLightMuted
    metadata___palette____rawLightVibrant
    metadata___palette____rawMuted
    metadata___palette____rawVibrant
    metadata___palette____type
    metadata___palette___darkMuted____key
    metadata___palette___darkMuted____type
    metadata___palette___darkMuted___background
    metadata___palette___darkMuted___foreground
    metadata___palette___darkMuted___population
    metadata___palette___darkMuted___title
    metadata___palette___darkVibrant____key
    metadata___palette___darkVibrant____type
    metadata___palette___darkVibrant___background
    metadata___palette___darkVibrant___foreground
    metadata___palette___darkVibrant___population
    metadata___palette___darkVibrant___title
    metadata___palette___dominant____key
    metadata___palette___dominant____type
    metadata___palette___dominant___background
    metadata___palette___dominant___foreground
    metadata___palette___dominant___population
    metadata___palette___dominant___title
    metadata___palette___lightMuted____key
    metadata___palette___lightMuted____type
    metadata___palette___lightMuted___background
    metadata___palette___lightMuted___foreground
    metadata___palette___lightMuted___population
    metadata___palette___lightMuted___title
    metadata___palette___lightVibrant____key
    metadata___palette___lightVibrant____type
    metadata___palette___lightVibrant___background
    metadata___palette___lightVibrant___foreground
    metadata___palette___lightVibrant___population
    metadata___palette___lightVibrant___title
    metadata___palette___muted____key
    metadata___palette___muted____type
    metadata___palette___muted___background
    metadata___palette___muted___foreground
    metadata___palette___muted___population
    metadata___palette___muted___title
    metadata___palette___vibrant____key
    metadata___palette___vibrant____type
    metadata___palette___vibrant___background
    metadata___palette___vibrant___foreground
    metadata___palette___vibrant___population
    metadata___palette___vibrant___title
    mimeType
    originalFilename
    parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___children___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    parent___parent___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    path
    sha1hash
    size
    source____key
    source____type
    source___id
    source___name
    source___url
    title
    url
}

enum SanityImageFormat {
    JPG
    NO_CHANGE
    PNG
    WEBP
}

enum SanityProjectFieldsEnum {
    _createdAt
    _id
    _key
    _rawFrontImage
    _rawImage
    _rawSkillsDb
    _rawSkillsDev
    _rawSkillsTools
    _rawSlug
    _rev
    _type
    _updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    description
    descriptionpl
    frontImage____key
    frontImage____rawAsset
    frontImage____rawCrop
    frontImage____rawHotspot
    frontImage____type
    frontImage___asset____createdAt
    frontImage___asset____id
    frontImage___asset____key
    frontImage___asset____rawMetadata
    frontImage___asset____rawSource
    frontImage___asset____rev
    frontImage___asset____type
    frontImage___asset____updatedAt
    frontImage___asset___assetId
    frontImage___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___description
    frontImage___asset___extension
    frontImage___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___label
    frontImage___asset___metadata____key
    frontImage___asset___metadata____rawDimensions
    frontImage___asset___metadata____rawLocation
    frontImage___asset___metadata____rawPalette
    frontImage___asset___metadata____type
    frontImage___asset___metadata___hasAlpha
    frontImage___asset___metadata___isOpaque
    frontImage___asset___metadata___lqip
    frontImage___asset___mimeType
    frontImage___asset___originalFilename
    frontImage___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    frontImage___asset___path
    frontImage___asset___sha1hash
    frontImage___asset___size
    frontImage___asset___source____key
    frontImage___asset___source____type
    frontImage___asset___source___id
    frontImage___asset___source___name
    frontImage___asset___source___url
    frontImage___asset___title
    frontImage___asset___url
    frontImage___crop____key
    frontImage___crop____type
    frontImage___crop___bottom
    frontImage___crop___left
    frontImage___crop___right
    frontImage___crop___top
    frontImage___hotspot____key
    frontImage___hotspot____type
    frontImage___hotspot___height
    frontImage___hotspot___width
    frontImage___hotspot___x
    frontImage___hotspot___y
    github
    id
    image
    image____key
    image____rawAsset
    image____rawCrop
    image____rawHotspot
    image____type
    image___asset____createdAt
    image___asset____id
    image___asset____key
    image___asset____rawMetadata
    image___asset____rawSource
    image___asset____rev
    image___asset____type
    image___asset____updatedAt
    image___asset___assetId
    image___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___description
    image___asset___extension
    image___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___label
    image___asset___metadata____key
    image___asset___metadata____rawDimensions
    image___asset___metadata____rawLocation
    image___asset___metadata____rawPalette
    image___asset___metadata____type
    image___asset___metadata___hasAlpha
    image___asset___metadata___isOpaque
    image___asset___metadata___lqip
    image___asset___mimeType
    image___asset___originalFilename
    image___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___path
    image___asset___sha1hash
    image___asset___size
    image___asset___source____key
    image___asset___source____type
    image___asset___source___id
    image___asset___source___name
    image___asset___source___url
    image___asset___title
    image___asset___url
    image___crop____key
    image___crop____type
    image___crop___bottom
    image___crop___left
    image___crop___right
    image___crop___top
    image___hotspot____key
    image___hotspot____type
    image___hotspot___height
    image___hotspot___width
    image___hotspot___x
    image___hotspot___y
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    isGroup
    live
    name
    namepl
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    skillsDb
    skillsDb____key
    skillsDb____rawSkills
    skillsDb____type
    skillsDb___description
    skillsDb___descriptionpl
    skillsDb___skills____createdAt
    skillsDb___skills____id
    skillsDb___skills____key
    skillsDb___skills____rawImage
    skillsDb___skills____rev
    skillsDb___skills____type
    skillsDb___skills____updatedAt
    skillsDb___skills___children
    skillsDb___skills___children___children
    skillsDb___skills___children___id
    skillsDb___skills___color
    skillsDb___skills___description
    skillsDb___skills___descriptionpl
    skillsDb___skills___id
    skillsDb___skills___image____key
    skillsDb___skills___image____rawAsset
    skillsDb___skills___image____rawCrop
    skillsDb___skills___image____rawHotspot
    skillsDb___skills___image____type
    skillsDb___skills___internal___content
    skillsDb___skills___internal___contentDigest
    skillsDb___skills___internal___description
    skillsDb___skills___internal___fieldOwners
    skillsDb___skills___internal___ignoreType
    skillsDb___skills___internal___mediaType
    skillsDb___skills___internal___owner
    skillsDb___skills___internal___type
    skillsDb___skills___name
    skillsDb___skills___order
    skillsDb___skills___parent___children
    skillsDb___skills___parent___id
    skillsDev
    skillsDev____key
    skillsDev____rawSkills
    skillsDev____type
    skillsDev___description
    skillsDev___descriptionpl
    skillsDev___skills____createdAt
    skillsDev___skills____id
    skillsDev___skills____key
    skillsDev___skills____rawImage
    skillsDev___skills____rev
    skillsDev___skills____type
    skillsDev___skills____updatedAt
    skillsDev___skills___children
    skillsDev___skills___children___children
    skillsDev___skills___children___id
    skillsDev___skills___color
    skillsDev___skills___description
    skillsDev___skills___descriptionpl
    skillsDev___skills___id
    skillsDev___skills___image____key
    skillsDev___skills___image____rawAsset
    skillsDev___skills___image____rawCrop
    skillsDev___skills___image____rawHotspot
    skillsDev___skills___image____type
    skillsDev___skills___internal___content
    skillsDev___skills___internal___contentDigest
    skillsDev___skills___internal___description
    skillsDev___skills___internal___fieldOwners
    skillsDev___skills___internal___ignoreType
    skillsDev___skills___internal___mediaType
    skillsDev___skills___internal___owner
    skillsDev___skills___internal___type
    skillsDev___skills___name
    skillsDev___skills___order
    skillsDev___skills___parent___children
    skillsDev___skills___parent___id
    skillsTools
    skillsTools____key
    skillsTools____rawSkills
    skillsTools____type
    skillsTools___description
    skillsTools___descriptionpl
    skillsTools___skills____createdAt
    skillsTools___skills____id
    skillsTools___skills____key
    skillsTools___skills____rawImage
    skillsTools___skills____rev
    skillsTools___skills____type
    skillsTools___skills____updatedAt
    skillsTools___skills___children
    skillsTools___skills___children___children
    skillsTools___skills___children___id
    skillsTools___skills___color
    skillsTools___skills___description
    skillsTools___skills___descriptionpl
    skillsTools___skills___id
    skillsTools___skills___image____key
    skillsTools___skills___image____rawAsset
    skillsTools___skills___image____rawCrop
    skillsTools___skills___image____rawHotspot
    skillsTools___skills___image____type
    skillsTools___skills___internal___content
    skillsTools___skills___internal___contentDigest
    skillsTools___skills___internal___description
    skillsTools___skills___internal___fieldOwners
    skillsTools___skills___internal___ignoreType
    skillsTools___skills___internal___mediaType
    skillsTools___skills___internal___owner
    skillsTools___skills___internal___type
    skillsTools___skills___name
    skillsTools___skills___order
    skillsTools___skills___parent___children
    skillsTools___skills___parent___id
    slug____key
    slug____type
    slug___current
    userData
    yt
}

enum SanityToolsFieldsEnum {
    _createdAt
    _id
    _key
    _rawImage
    _rev
    _type
    _updatedAt
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    color
    description
    descriptionpl
    id
    image____key
    image____rawAsset
    image____rawCrop
    image____rawHotspot
    image____type
    image___asset____createdAt
    image___asset____id
    image___asset____key
    image___asset____rawMetadata
    image___asset____rawSource
    image___asset____rev
    image___asset____type
    image___asset____updatedAt
    image___asset___assetId
    image___asset___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___children___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___description
    image___asset___extension
    image___asset___fixed___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___height @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fixed___width @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___aspectRatio @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___base64 @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___sizes @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___src @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSet @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcSetWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___fluid___srcWebp @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___content @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___contentDigest @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___description @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___fieldOwners @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___ignoreType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___mediaType @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___owner @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___internal___type @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___label
    image___asset___metadata____key
    image___asset___metadata____rawDimensions
    image___asset___metadata____rawLocation
    image___asset___metadata____rawPalette
    image___asset___metadata____type
    image___asset___metadata___hasAlpha
    image___asset___metadata___isOpaque
    image___asset___metadata___lqip
    image___asset___mimeType
    image___asset___originalFilename
    image___asset___parent___children @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___parent___id @deprecated(reason : "Sorting on fields that need arguments to resolve is deprecated.")
    image___asset___path
    image___asset___sha1hash
    image___asset___size
    image___asset___source____key
    image___asset___source____type
    image___asset___source___id
    image___asset___source___name
    image___asset___source___url
    image___asset___title
    image___asset___url
    image___crop____key
    image___crop____type
    image___crop___bottom
    image___crop___left
    image___crop___right
    image___crop___top
    image___hotspot____key
    image___hotspot____type
    image___hotspot___height
    image___hotspot___width
    image___hotspot___x
    image___hotspot___y
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    order
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteBuildMetadataFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
}

enum SiteFieldsEnum {
    buildTime
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    host
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pathPrefix
    polyfill
    port
    siteMetadata___description
    siteMetadata___siteUrl
    siteMetadata___title
    siteMetadata___twitter
}

enum SitePageFieldsEnum {
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    component
    componentChunkName
    componentPath
    context___slug
    id
    internalComponentName
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    isCreatedByStatefulCreatePages
    matchPath
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    path
    pluginCreatorId
    pluginCreator___browserAPIs
    pluginCreator___children
    pluginCreator___children___children
    pluginCreator___children___children___children
    pluginCreator___children___children___id
    pluginCreator___children___id
    pluginCreator___children___internal___content
    pluginCreator___children___internal___contentDigest
    pluginCreator___children___internal___description
    pluginCreator___children___internal___fieldOwners
    pluginCreator___children___internal___ignoreType
    pluginCreator___children___internal___mediaType
    pluginCreator___children___internal___owner
    pluginCreator___children___internal___type
    pluginCreator___children___parent___children
    pluginCreator___children___parent___id
    pluginCreator___id
    pluginCreator___internal___content
    pluginCreator___internal___contentDigest
    pluginCreator___internal___description
    pluginCreator___internal___fieldOwners
    pluginCreator___internal___ignoreType
    pluginCreator___internal___mediaType
    pluginCreator___internal___owner
    pluginCreator___internal___type
    pluginCreator___name
    pluginCreator___nodeAPIs
    pluginCreator___packageJson___dependencies
    pluginCreator___packageJson___dependencies___name
    pluginCreator___packageJson___dependencies___version
    pluginCreator___packageJson___description
    pluginCreator___packageJson___devDependencies
    pluginCreator___packageJson___devDependencies___name
    pluginCreator___packageJson___devDependencies___version
    pluginCreator___packageJson___keywords
    pluginCreator___packageJson___license
    pluginCreator___packageJson___main
    pluginCreator___packageJson___name
    pluginCreator___packageJson___peerDependencies
    pluginCreator___packageJson___peerDependencies___name
    pluginCreator___packageJson___peerDependencies___version
    pluginCreator___packageJson___version
    pluginCreator___parent___children
    pluginCreator___parent___children___children
    pluginCreator___parent___children___id
    pluginCreator___parent___id
    pluginCreator___parent___internal___content
    pluginCreator___parent___internal___contentDigest
    pluginCreator___parent___internal___description
    pluginCreator___parent___internal___fieldOwners
    pluginCreator___parent___internal___ignoreType
    pluginCreator___parent___internal___mediaType
    pluginCreator___parent___internal___owner
    pluginCreator___parent___internal___type
    pluginCreator___parent___parent___children
    pluginCreator___parent___parent___id
    pluginCreator___pluginFilepath
    pluginCreator___pluginOptions___allExtensions
    pluginCreator___pluginOptions___base64Width
    pluginCreator___pluginOptions___dataset
    pluginCreator___pluginOptions___defaultQuality
    pluginCreator___pluginOptions___displayName
    pluginCreator___pluginOptions___failOnError
    pluginCreator___pluginOptions___fileName
    pluginCreator___pluginOptions___isTSX
    pluginCreator___pluginOptions___jsxPragma
    pluginCreator___pluginOptions___minify
    pluginCreator___pluginOptions___name
    pluginCreator___pluginOptions___namespace
    pluginCreator___pluginOptions___path
    pluginCreator___pluginOptions___pathCheck
    pluginCreator___pluginOptions___projectId
    pluginCreator___pluginOptions___pure
    pluginCreator___pluginOptions___stripMetadata
    pluginCreator___pluginOptions___token
    pluginCreator___pluginOptions___transpileTemplateLiterals
    pluginCreator___pluginOptions___watchMode
    pluginCreator___resolve
    pluginCreator___ssrAPIs
    pluginCreator___version
}

enum SitePluginFieldsEnum {
    browserAPIs
    children
    children___children
    children___children___children
    children___children___children___children
    children___children___children___id
    children___children___id
    children___children___internal___content
    children___children___internal___contentDigest
    children___children___internal___description
    children___children___internal___fieldOwners
    children___children___internal___ignoreType
    children___children___internal___mediaType
    children___children___internal___owner
    children___children___internal___type
    children___children___parent___children
    children___children___parent___id
    children___id
    children___internal___content
    children___internal___contentDigest
    children___internal___description
    children___internal___fieldOwners
    children___internal___ignoreType
    children___internal___mediaType
    children___internal___owner
    children___internal___type
    children___parent___children
    children___parent___children___children
    children___parent___children___id
    children___parent___id
    children___parent___internal___content
    children___parent___internal___contentDigest
    children___parent___internal___description
    children___parent___internal___fieldOwners
    children___parent___internal___ignoreType
    children___parent___internal___mediaType
    children___parent___internal___owner
    children___parent___internal___type
    children___parent___parent___children
    children___parent___parent___id
    id
    internal___content
    internal___contentDigest
    internal___description
    internal___fieldOwners
    internal___ignoreType
    internal___mediaType
    internal___owner
    internal___type
    name
    nodeAPIs
    packageJson___dependencies
    packageJson___dependencies___name
    packageJson___dependencies___version
    packageJson___description
    packageJson___devDependencies
    packageJson___devDependencies___name
    packageJson___devDependencies___version
    packageJson___keywords
    packageJson___license
    packageJson___main
    packageJson___name
    packageJson___peerDependencies
    packageJson___peerDependencies___name
    packageJson___peerDependencies___version
    packageJson___version
    parent___children
    parent___children___children
    parent___children___children___children
    parent___children___children___id
    parent___children___id
    parent___children___internal___content
    parent___children___internal___contentDigest
    parent___children___internal___description
    parent___children___internal___fieldOwners
    parent___children___internal___ignoreType
    parent___children___internal___mediaType
    parent___children___internal___owner
    parent___children___internal___type
    parent___children___parent___children
    parent___children___parent___id
    parent___id
    parent___internal___content
    parent___internal___contentDigest
    parent___internal___description
    parent___internal___fieldOwners
    parent___internal___ignoreType
    parent___internal___mediaType
    parent___internal___owner
    parent___internal___type
    parent___parent___children
    parent___parent___children___children
    parent___parent___children___id
    parent___parent___id
    parent___parent___internal___content
    parent___parent___internal___contentDigest
    parent___parent___internal___description
    parent___parent___internal___fieldOwners
    parent___parent___internal___ignoreType
    parent___parent___internal___mediaType
    parent___parent___internal___owner
    parent___parent___internal___type
    parent___parent___parent___children
    parent___parent___parent___id
    pluginFilepath
    pluginOptions___allExtensions
    pluginOptions___base64Width
    pluginOptions___dataset
    pluginOptions___defaultQuality
    pluginOptions___displayName
    pluginOptions___failOnError
    pluginOptions___fileName
    pluginOptions___isTSX
    pluginOptions___jsxPragma
    pluginOptions___minify
    pluginOptions___name
    pluginOptions___namespace
    pluginOptions___path
    pluginOptions___pathCheck
    pluginOptions___projectId
    pluginOptions___pure
    pluginOptions___stripMetadata
    pluginOptions___token
    pluginOptions___transpileTemplateLiterals
    pluginOptions___watchMode
    resolve
    ssrAPIs
    version
}

enum SortOrderEnum {
    ASC
    DESC
}

input AVIFOptions {
    lossless: Boolean
    quality: Int
    speed: Int
}

input BlurredOptions {
    "Force the output format for the low-res preview. Default is to use the same format as the input. You should rarely need to change this"
    toFormat: ImageFormat
    "Width of the generated low-res preview. Default is 20px"
    width: Int
}

input BooleanQueryOperatorInput {
    eq: Boolean
    in: [Boolean]
    ne: Boolean
    nin: [Boolean]
}

input DateQueryOperatorInput {
    eq: Date
    gt: Date
    gte: Date
    in: [Date]
    lt: Date
    lte: Date
    ne: Date
    nin: [Date]
}

input DirectoryFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    children: NodeFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input DirectorySortInput {
    fields: [DirectoryFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input DuotoneGradient {
    highlight: String!
    opacity: Int
    shadow: String!
}

input FileFilterInput {
    absolutePath: StringQueryOperatorInput
    accessTime: DateQueryOperatorInput
    atime: DateQueryOperatorInput
    atimeMs: FloatQueryOperatorInput
    base: StringQueryOperatorInput
    birthTime: DateQueryOperatorInput
    birthtime: DateQueryOperatorInput
    birthtimeMs: FloatQueryOperatorInput
    blksize: IntQueryOperatorInput
    blocks: IntQueryOperatorInput
    changeTime: DateQueryOperatorInput
    childImageSharp: ImageSharpFilterInput
    children: NodeFilterListInput
    childrenImageSharp: ImageSharpFilterListInput
    ctime: DateQueryOperatorInput
    ctimeMs: FloatQueryOperatorInput
    dev: IntQueryOperatorInput
    dir: StringQueryOperatorInput
    ext: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    gid: IntQueryOperatorInput
    id: StringQueryOperatorInput
    ino: FloatQueryOperatorInput
    internal: InternalFilterInput
    mode: IntQueryOperatorInput
    modifiedTime: DateQueryOperatorInput
    mtime: DateQueryOperatorInput
    mtimeMs: FloatQueryOperatorInput
    name: StringQueryOperatorInput
    nlink: IntQueryOperatorInput
    parent: NodeFilterInput
    prettySize: StringQueryOperatorInput
    publicURL: StringQueryOperatorInput
    rdev: IntQueryOperatorInput
    relativeDirectory: StringQueryOperatorInput
    relativePath: StringQueryOperatorInput
    root: StringQueryOperatorInput
    size: IntQueryOperatorInput
    sourceInstanceName: StringQueryOperatorInput
    uid: IntQueryOperatorInput
}

input FileSortInput {
    fields: [FileFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input FloatQueryOperatorInput {
    eq: Float
    gt: Float
    gte: Float
    in: [Float]
    lt: Float
    lte: Float
    ne: Float
    nin: [Float]
}

input ImageSharpFilterInput {
    children: NodeFilterListInput
    fixed: ImageSharpFixedFilterInput
    fluid: ImageSharpFluidFilterInput
    gatsbyImageData: JSONQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    original: ImageSharpOriginalFilterInput
    parent: NodeFilterInput
    resize: ImageSharpResizeFilterInput
}

input ImageSharpFilterListInput {
    elemMatch: ImageSharpFilterInput
}

input ImageSharpFixedFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    originalImg: StringQueryOperatorInput
    originalName: StringQueryOperatorInput
    presentationHeight: IntQueryOperatorInput
    presentationWidth: IntQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
}

input ImageSharpOriginalFilterInput {
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input ImageSharpResizeFilterInput {
    aspectRatio: FloatQueryOperatorInput
    height: IntQueryOperatorInput
    originalName: StringQueryOperatorInput
    src: StringQueryOperatorInput
    tracedSVG: StringQueryOperatorInput
    width: IntQueryOperatorInput
}

input ImageSharpSortInput {
    fields: [ImageSharpFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input IntQueryOperatorInput {
    eq: Int
    gt: Int
    gte: Int
    in: [Int]
    lt: Int
    lte: Int
    ne: Int
    nin: [Int]
}

input InternalFilterInput {
    content: StringQueryOperatorInput
    contentDigest: StringQueryOperatorInput
    description: StringQueryOperatorInput
    fieldOwners: StringQueryOperatorInput
    ignoreType: BooleanQueryOperatorInput
    mediaType: StringQueryOperatorInput
    owner: StringQueryOperatorInput
    type: StringQueryOperatorInput
}

input JPGOptions {
    progressive: Boolean = true
    quality: Int
}

input JSONQueryOperatorInput {
    eq: JSON
    glob: JSON
    in: [JSON]
    ne: JSON
    nin: [JSON]
    regex: JSON
}

input NodeFilterInput {
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input NodeFilterListInput {
    elemMatch: NodeFilterInput
}

input PNGOptions {
    compressionSpeed: Int = 4
    quality: Int
}

input Potrace {
    alphaMax: Float
    background: String
    blackOnWhite: Boolean
    color: String
    optCurve: Boolean
    optTolerance: Float
    threshold: Int
    turdSize: Float
    turnPolicy: PotraceTurnPolicy
}

input SanityAssetSourceDataFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    id: StringQueryOperatorInput
    name: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SanityDatabaseFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawImage: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    children: NodeFilterListInput
    color: StringQueryOperatorInput
    description: StringQueryOperatorInput
    descriptionpl: StringQueryOperatorInput
    id: StringQueryOperatorInput
    image: SanityImageFilterInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    order: FloatQueryOperatorInput
    parent: NodeFilterInput
}

input SanityDatabaseSortInput {
    fields: [SanityDatabaseFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityDbDescriptionFilterInput {
    _key: StringQueryOperatorInput
    _rawSkills: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    description: StringQueryOperatorInput
    descriptionpl: StringQueryOperatorInput
    skills: SanityDatabaseFilterInput
}

input SanityDbDescriptionFilterListInput {
    elemMatch: SanityDbDescriptionFilterInput
}

input SanityDevDescriptionFilterInput {
    _key: StringQueryOperatorInput
    _rawSkills: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    description: StringQueryOperatorInput
    descriptionpl: StringQueryOperatorInput
    skills: SanityDevelopmentFilterInput
}

input SanityDevDescriptionFilterListInput {
    elemMatch: SanityDevDescriptionFilterInput
}

input SanityDevelopmentFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawImage: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    children: NodeFilterListInput
    color: StringQueryOperatorInput
    description: StringQueryOperatorInput
    descriptionpl: StringQueryOperatorInput
    id: StringQueryOperatorInput
    image: SanityImageFilterInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    order: FloatQueryOperatorInput
    parent: NodeFilterInput
}

input SanityDevelopmentSortInput {
    fields: [SanityDevelopmentFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityFileAssetFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawSource: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    assetId: StringQueryOperatorInput
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    label: StringQueryOperatorInput
    mimeType: StringQueryOperatorInput
    originalFilename: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    sha1hash: StringQueryOperatorInput
    size: FloatQueryOperatorInput
    source: SanityAssetSourceDataFilterInput
    title: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SanityFileAssetSortInput {
    fields: [SanityFileAssetFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityGeopointFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    alt: FloatQueryOperatorInput
    lat: FloatQueryOperatorInput
    lng: FloatQueryOperatorInput
}

input SanityImageAssetFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawMetadata: JSONQueryOperatorInput
    _rawSource: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    assetId: StringQueryOperatorInput
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    extension: StringQueryOperatorInput
    fixed: SanityImageFixedFilterInput
    fluid: SanityImageFluidFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    label: StringQueryOperatorInput
    metadata: SanityImageMetadataFilterInput
    mimeType: StringQueryOperatorInput
    originalFilename: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    sha1hash: StringQueryOperatorInput
    size: FloatQueryOperatorInput
    source: SanityAssetSourceDataFilterInput
    title: StringQueryOperatorInput
    url: StringQueryOperatorInput
}

input SanityImageAssetSortInput {
    fields: [SanityImageAssetFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityImageCropFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    bottom: FloatQueryOperatorInput
    left: FloatQueryOperatorInput
    right: FloatQueryOperatorInput
    top: FloatQueryOperatorInput
}

input SanityImageDimensionsFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    aspectRatio: FloatQueryOperatorInput
    height: FloatQueryOperatorInput
    width: FloatQueryOperatorInput
}

input SanityImageFilterInput {
    _key: StringQueryOperatorInput
    _rawAsset: JSONQueryOperatorInput
    _rawCrop: JSONQueryOperatorInput
    _rawHotspot: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    asset: SanityImageAssetFilterInput
    crop: SanityImageCropFilterInput
    hotspot: SanityImageHotspotFilterInput
}

input SanityImageFilterListInput {
    elemMatch: SanityImageFilterInput
}

input SanityImageFixedFilterInput {
    base64: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
    width: FloatQueryOperatorInput
}

input SanityImageFluidFilterInput {
    aspectRatio: FloatQueryOperatorInput
    base64: StringQueryOperatorInput
    sizes: StringQueryOperatorInput
    src: StringQueryOperatorInput
    srcSet: StringQueryOperatorInput
    srcSetWebp: StringQueryOperatorInput
    srcWebp: StringQueryOperatorInput
}

input SanityImageHotspotFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    height: FloatQueryOperatorInput
    width: FloatQueryOperatorInput
    x: FloatQueryOperatorInput
    y: FloatQueryOperatorInput
}

input SanityImageMetadataFilterInput {
    _key: StringQueryOperatorInput
    _rawDimensions: JSONQueryOperatorInput
    _rawLocation: JSONQueryOperatorInput
    _rawPalette: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    dimensions: SanityImageDimensionsFilterInput
    hasAlpha: BooleanQueryOperatorInput
    isOpaque: BooleanQueryOperatorInput
    location: SanityGeopointFilterInput
    lqip: StringQueryOperatorInput
    palette: SanityImagePaletteFilterInput
}

input SanityImagePaletteFilterInput {
    _key: StringQueryOperatorInput
    _rawDarkMuted: JSONQueryOperatorInput
    _rawDarkVibrant: JSONQueryOperatorInput
    _rawDominant: JSONQueryOperatorInput
    _rawLightMuted: JSONQueryOperatorInput
    _rawLightVibrant: JSONQueryOperatorInput
    _rawMuted: JSONQueryOperatorInput
    _rawVibrant: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    darkMuted: SanityImagePaletteSwatchFilterInput
    darkVibrant: SanityImagePaletteSwatchFilterInput
    dominant: SanityImagePaletteSwatchFilterInput
    lightMuted: SanityImagePaletteSwatchFilterInput
    lightVibrant: SanityImagePaletteSwatchFilterInput
    muted: SanityImagePaletteSwatchFilterInput
    vibrant: SanityImagePaletteSwatchFilterInput
}

input SanityImagePaletteSwatchFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    background: StringQueryOperatorInput
    foreground: StringQueryOperatorInput
    population: FloatQueryOperatorInput
    title: StringQueryOperatorInput
}

input SanityProjectFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawFrontImage: JSONQueryOperatorInput
    _rawImage: JSONQueryOperatorInput
    _rawSkillsDb: JSONQueryOperatorInput
    _rawSkillsDev: JSONQueryOperatorInput
    _rawSkillsTools: JSONQueryOperatorInput
    _rawSlug: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    children: NodeFilterListInput
    description: StringQueryOperatorInput
    descriptionpl: StringQueryOperatorInput
    frontImage: SanityImageFilterInput
    github: StringQueryOperatorInput
    id: StringQueryOperatorInput
    image: SanityImageFilterListInput
    internal: InternalFilterInput
    isGroup: BooleanQueryOperatorInput
    live: StringQueryOperatorInput
    name: StringQueryOperatorInput
    namepl: StringQueryOperatorInput
    order: FloatQueryOperatorInput
    parent: NodeFilterInput
    skillsDb: SanityDbDescriptionFilterListInput
    skillsDev: SanityDevDescriptionFilterListInput
    skillsTools: SanityToolsDescriptionFilterListInput
    slug: SanitySlugFilterInput
    userData: StringQueryOperatorInput
    yt: StringQueryOperatorInput
}

input SanityProjectSortInput {
    fields: [SanityProjectFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SanityResolveReferencesConfiguration {
    "Max depth to resolve references to"
    maxDepth: Int!
}

input SanitySlugFilterInput {
    _key: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    current: StringQueryOperatorInput
}

input SanityToolsDescriptionFilterInput {
    _key: StringQueryOperatorInput
    _rawSkills: JSONQueryOperatorInput
    _type: StringQueryOperatorInput
    description: StringQueryOperatorInput
    descriptionpl: StringQueryOperatorInput
    skills: SanityToolsFilterInput
}

input SanityToolsDescriptionFilterListInput {
    elemMatch: SanityToolsDescriptionFilterInput
}

input SanityToolsFilterInput {
    _createdAt: DateQueryOperatorInput
    _id: StringQueryOperatorInput
    _key: StringQueryOperatorInput
    _rawImage: JSONQueryOperatorInput
    _rev: StringQueryOperatorInput
    _type: StringQueryOperatorInput
    _updatedAt: DateQueryOperatorInput
    children: NodeFilterListInput
    color: StringQueryOperatorInput
    description: StringQueryOperatorInput
    descriptionpl: StringQueryOperatorInput
    id: StringQueryOperatorInput
    image: SanityImageFilterInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    order: FloatQueryOperatorInput
    parent: NodeFilterInput
}

input SanityToolsSortInput {
    fields: [SanityToolsFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteBuildMetadataFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
}

input SiteBuildMetadataSortInput {
    fields: [SiteBuildMetadataFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteFilterInput {
    buildTime: DateQueryOperatorInput
    children: NodeFilterListInput
    host: StringQueryOperatorInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    parent: NodeFilterInput
    pathPrefix: StringQueryOperatorInput
    polyfill: BooleanQueryOperatorInput
    port: IntQueryOperatorInput
    siteMetadata: SiteSiteMetadataFilterInput
}

input SitePageContextFilterInput {
    slug: StringQueryOperatorInput
}

input SitePageFilterInput {
    children: NodeFilterListInput
    component: StringQueryOperatorInput
    componentChunkName: StringQueryOperatorInput
    componentPath: StringQueryOperatorInput
    context: SitePageContextFilterInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    internalComponentName: StringQueryOperatorInput
    isCreatedByStatefulCreatePages: BooleanQueryOperatorInput
    matchPath: StringQueryOperatorInput
    parent: NodeFilterInput
    path: StringQueryOperatorInput
    pluginCreator: SitePluginFilterInput
    pluginCreatorId: StringQueryOperatorInput
}

input SitePageSortInput {
    fields: [SitePageFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SitePluginFilterInput {
    browserAPIs: StringQueryOperatorInput
    children: NodeFilterListInput
    id: StringQueryOperatorInput
    internal: InternalFilterInput
    name: StringQueryOperatorInput
    nodeAPIs: StringQueryOperatorInput
    packageJson: SitePluginPackageJsonFilterInput
    parent: NodeFilterInput
    pluginFilepath: StringQueryOperatorInput
    pluginOptions: SitePluginPluginOptionsFilterInput
    resolve: StringQueryOperatorInput
    ssrAPIs: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDependenciesFilterInput
}

input SitePluginPackageJsonDevDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonDevDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonDevDependenciesFilterInput
}

input SitePluginPackageJsonFilterInput {
    dependencies: SitePluginPackageJsonDependenciesFilterListInput
    description: StringQueryOperatorInput
    devDependencies: SitePluginPackageJsonDevDependenciesFilterListInput
    keywords: StringQueryOperatorInput
    license: StringQueryOperatorInput
    main: StringQueryOperatorInput
    name: StringQueryOperatorInput
    peerDependencies: SitePluginPackageJsonPeerDependenciesFilterListInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterInput {
    name: StringQueryOperatorInput
    version: StringQueryOperatorInput
}

input SitePluginPackageJsonPeerDependenciesFilterListInput {
    elemMatch: SitePluginPackageJsonPeerDependenciesFilterInput
}

input SitePluginPluginOptionsFilterInput {
    allExtensions: BooleanQueryOperatorInput
    base64Width: IntQueryOperatorInput
    dataset: StringQueryOperatorInput
    defaultQuality: IntQueryOperatorInput
    displayName: BooleanQueryOperatorInput
    failOnError: BooleanQueryOperatorInput
    fileName: BooleanQueryOperatorInput
    isTSX: BooleanQueryOperatorInput
    jsxPragma: StringQueryOperatorInput
    minify: BooleanQueryOperatorInput
    name: StringQueryOperatorInput
    namespace: StringQueryOperatorInput
    path: StringQueryOperatorInput
    pathCheck: BooleanQueryOperatorInput
    projectId: StringQueryOperatorInput
    pure: BooleanQueryOperatorInput
    stripMetadata: BooleanQueryOperatorInput
    token: StringQueryOperatorInput
    transpileTemplateLiterals: BooleanQueryOperatorInput
    watchMode: BooleanQueryOperatorInput
}

input SitePluginSortInput {
    fields: [SitePluginFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input SiteSiteMetadataFilterInput {
    description: StringQueryOperatorInput
    siteUrl: StringQueryOperatorInput
    title: StringQueryOperatorInput
    twitter: StringQueryOperatorInput
}

input SiteSortInput {
    fields: [SiteFieldsEnum]
    order: [SortOrderEnum] = [ASC]
}

input StringQueryOperatorInput {
    eq: String
    glob: String
    in: [String]
    ne: String
    nin: [String]
    regex: String
}

input TransformOptions {
    cropFocus: ImageCropFocus = ATTENTION
    duotone: DuotoneGradient
    fit: ImageFit = COVER
    grayscale: Boolean = false
    rotate: Int = 0
    trim: Float = 0.0
}

input WebPOptions {
    quality: Int
}


"A date string, such as 2007-12-03, compliant with the ISO 8601 standard for representation of dates and times using the Gregorian calendar."
scalar Date

"The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf)."
scalar JSON
